[{"path":"https://bcgov.github.io/bccamtrap/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, interest fostering open welcoming community, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality. Examples unacceptable behavior participants include: use sexualized language imagery Personal attacks Trolling insulting/derogatory comments Public private harassment Publishing ’s private information, physical electronic addresses, without explicit permission unethical unprofessional conduct Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful. adopting Code Conduct, project maintainers commit fairly consistently applying principles every aspect managing project. Project maintainers follow enforce Code Conduct may permanently removed project team. Code Conduct applies within project spaces public spaces individual representing project community. Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project maintainer andy@andyteucher.ca. complaints reviewed investigated result response deemed necessary appropriate circumstances. Maintainers obligated maintain confidentiality regard reporter incident. Code Conduct adapted Contributor Covenant, version 1.3.0, available http://contributor-covenant.org/version/1/3/0/ project created using bcgovr package.","code":""},{"path":"https://bcgov.github.io/bccamtrap/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"NA","text":"Government employees, public members private sector encouraged contribute repository forking submitting pull request. (new GitHub, might start basic tutorial check detailed guide pull requests.) Pull requests evaluated repository guardians schedule deemed beneficial committed master. contributors retain original copyright stuff, contributing project, grant world-wide, royalty-free, perpetual, irrevocable, non-exclusive, transferable license users terms license project distributed. project created using bcgovr package.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://bcgov.github.io/bccamtrap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andy Teucher. Author, maintainer. Province British Columbia. Copyright holder.","code":""},{"path":"https://bcgov.github.io/bccamtrap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teucher (2024). bccamtrap: Tools QA validation Camera Trap data. R package version 0.0.0.9000, https://bcgov.github.io/bccamtrap/, https://github.com/ateucher/bccamtrap.","code":"@Manual{,   title = {bccamtrap: Tools for QA and validation of Camera Trap data},   author = {Andy Teucher},   year = {2024},   note = {R package version 0.0.0.9000, https://bcgov.github.io/bccamtrap/},   url = {https://github.com/ateucher/bccamtrap}, }"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"bccamtrap","dir":"","previous_headings":"","what":"Tools for QA and validation of Camera Trap data","title":"Tools for QA and validation of Camera Trap data","text":"Functions QA validation Camera Trap data","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for QA and validation of Camera Trap data","text":"can install development version bccamtrap GitHub using devtools package (may need install first):","code":"# install.packages(\"devtools\") devtools::install_github(\"bcgov/bccamtrap\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example Usage","title":"Tools for QA and validation of Camera Trap data","text":"package developed camera trap studies West Coast Region, BC Ministry Water, Land, Resource Stewardship (WLRS). functions package currently assume project session-level data stored BC Government Wildlife Data Submission Template Camera Trap Data, augmented additional fields. image data expected multiple csv files, one folder per project. csv files generated reviewing images TimeLapse software, using template v20230518. Note example data obfuscated protect location projects. begin, set paths project metadata file, folder containing TimeLapse image files:","code":"library(bccamtrap)  metadata_path <- \"~/data/project-files/project_1_RISC_WCR_Database_Template_v20230518.xlsm\" data_path <- \"~/data/wc-wlrs-cam-data/camera-data/project_1/\""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"project-and-station-metadata","dir":"","previous_headings":"Example Usage","what":"Project and station metadata","title":"Tools for QA and validation of Camera Trap data","text":"Read project metadata SPI worksheet. functions read relevant tabs:","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"project-information","dir":"","previous_headings":"Example Usage","what":"Project Information","title":"Tools for QA and validation of Camera Trap data","text":"","code":"proj <- read_project_info(metadata_path) proj #> # A tibble: 1 × 4 #>   spi_project_id project_name                  survey_name survey_intensity_code #> * <chr>          <chr>                         <chr>       <chr>                 #> 1 <NA>           2022 - ongoing - Roosevelt E… 2022-2023 … <NA>"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"sample-station-information","dir":"","previous_headings":"Example Usage > Project Information","what":"Sample station information","title":"Tools for QA and validation of Camera Trap data","text":"Read sample station information. creates spatial data frame class \"sf\", sf package. format allows us work regular data frame, also spatial things . Use qa_stations_spatial() function run basic spatial validation data - namely checking spatial outliers: Use summary() method Sample Station Info basic descriptive stats: Use map_stations() function create interactive map stations. show potential outlying stations, indicating possible data errors:","code":"sample_stations <- read_sample_station_info(metadata_path) sample_stations #> Simple feature collection with 21 features and 28 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -126.3803 ymin: 47.30585 xmax: -125.6508 ymax: 47.3639 #> Geodetic CRS:  WGS 84 #> # A tibble: 21 × 23 #>    study_area_name study_area_photos sample_station_label station_status #>    <chr>           <chr>             <chr>                <chr>          #>  1 Test Project    Y                 19_1                 Camera Active  #>  2 Test Project    Y                 19_2                 Camera Active  #>  3 Test Project    Y                 20                   Camera Active  #>  4 Test Project    Y                 21_1                 Camera Active  #>  5 Test Project    Y                 21_2                 Camera Active  #>  6 Test Project    Y                 24                   Camera Active  #>  7 Test Project    Y                 25                   Camera Active  #>  8 Test Project    Y                 26                   Camera Active  #>  9 Test Project    Y                 27                   Camera Moved   #> 10 Test Project    Y                 28                   Camera Active  #> # ℹ 11 more rows #> # ℹ 19 more variables: number_of_cameras <dbl>, set_date <date>, #> #   general_location <chr>, elevation_m <dbl>, slope_percent <dbl>, #> #   aspect_degrees <dbl>, crown_closure_percent <dbl>, #> #   camera_bearing_degrees <dbl>, camera_height_cm <dbl>, #> #   distance_to_feature_m <dbl>, visible_range_m <dbl>, habitat_feature <chr>, #> #   lock <chr>, code <chr>, sample_station_comments <chr>, … sample_stations <- qa_stations_spatial(sample_stations) #> ! Station 19_1 appears to be very far away from other stations. Please check #> its coordinates. summary(sample_stations) #> ┌ Test Project ───────┐ #> │                     │ #> │   Sample Stations   │ #> │                     │ #> └─────────────────────┘ #> ℹ 18 sample stations in 21 locations. #> ℹ Summary of station distances (m): #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>     5.11  4224.12  8658.82 11869.30 14477.47 55180.26 #> ✖ Detected 1 potential spatial outlier. #> ℹ Station status summary: #> Camera Active  Camera Moved  #>            18             3 #> ℹ Set dates: Between 2022-11-07 and 2023-11-16 #> ! Run `map_stations(object)` to view stations on a map. map_stations(sample_stations)"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"camera-information","dir":"","previous_headings":"Example Usage > Project Information","what":"Camera Information:","title":"Tools for QA and validation of Camera Trap data","text":"Read camera information using read_camera_info():","code":"camera_info <- read_camera_info(metadata_path) camera_info #> Simple feature collection with 21 features and 13 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.5219 ymin: 49.28703 xmax: -125.2213 ymax: 49.34728 #> Geodetic CRS:  WGS 84 #> # A tibble: 21 × 8 #>    study_area_name parent_sample_station_label camera_label make_of_camera_code #>    <chr>           <chr>                       <chr>        <chr>               #>  1 Test Project    19_1                        UBC 2        <NA>                #>  2 Test Project    19_2                        UBC 1        <NA>                #>  3 Test Project    20                          Eco1059      <NA>                #>  4 Test Project    21_1                        Eco1057      <NA>                #>  5 Test Project    21_2                        Eco7998      <NA>                #>  6 Test Project    24                          Eco1050      <NA>                #>  7 Test Project    25                          Eco1040      <NA>                #>  8 Test Project    26                          Eco7939      <NA>                #>  9 Test Project    27                          Eco6690      <NA>                #> 10 Test Project    28                          UBC 4        <NA>                #> # ℹ 11 more rows #> # ℹ 4 more variables: model_of_camera <chr>, camera_comments <chr>, #> #   site_description_comments <chr>, site_description_date <date>"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"camera-setup-and-checks","dir":"","previous_headings":"Example Usage > Project Information","what":"Camera Setup and Checks:","title":"Tools for QA and validation of Camera Trap data","text":"","code":"camera_setup_checks <- read_cam_setup_checks(metadata_path) camera_setup_checks #> # A tibble: 43 × 30 #>    study_area_name sample_station_label deployment_label camera_label surveyors #>    <chr>           <chr>                <chr>            <chr>        <chr>     #>  1 Test Project    19_1                 <NA>             UBC 2        MB,MS     #>  2 Test Project    19_2                 <NA>             UBC 1        MB,MS     #>  3 Test Project    20                   <NA>             Eco1059      MB,MS     #>  4 Test Project    21_1                 <NA>             Eco1057      MB,MS     #>  5 Test Project    21_2                 <NA>             Eco7998      MB,MS     #>  6 Test Project    24                   <NA>             Eco1050      MB,MS     #>  7 Test Project    25                   <NA>             Eco1040      MB,MS     #>  8 Test Project    26                   <NA>             Eco7939      MB,MS     #>  9 Test Project    27                   <NA>             Eco6690      MB,MS     #> 10 Test Project    28                   <NA>             UBC 4        MB,MS     #> # ℹ 33 more rows #> # ℹ 25 more variables: date_time_checked <dttm>, sampling_start <dttm>, #> #   sampling_end <dttm>, total_visit_or_deployment_time <dbl>, #> #   unit_of_total_time_code <chr>, visit_type <chr>, #> #   camera_status_on_arrival <chr>, battery_level <chr>, #> #   batteries_changed <chr>, number_of_photos <dbl>, quiet_period_s <chr>, #> #   trigger_sensitivity <chr>, trigger_timing_s <dbl>, …"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"deployments","dir":"","previous_headings":"Example Usage > Project Information","what":"Deployments","title":"Tools for QA and validation of Camera Trap data","text":"Rather just looking raw camera setup checks stations, utility assembling sampling deployments combining sample station information camera setup checks. make_deployments() function. handy summary() method well: can use mapview package quickly visualize , setting zcol argument name column ’d like colour points . Clicking point give details deployment.","code":"deployments <- make_deployments(metadata_path) deployments #> Simple feature collection with 28 features and 58 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -123.505 ymin: 51.2599 xmax: -122.7148 ymax: 51.32557 #> Geodetic CRS:  WGS 84 #> # A tibble: 28 × 53 #>    study_area_name sample_station_label deployment_label camera_label surveyors #>    <chr>           <chr>                <chr>            <chr>        <chr>     #>  1 Test Project    19_1                 19_1_20230605    UBC 2        CM, BT    #>  2 Test Project    19_2                 19_2_20230605    UBC 1        CM, BT    #>  3 Test Project    20                   20_20230605      Eco1059      CM, BT    #>  4 Test Project    21_1                 21_20230605      Eco1057      CM, BT    #>  5 Test Project    21_2                 21_2_20230605    Eco7998      CM, BT    #>  6 Test Project    24                   24_20230708      Eco1050      MB,MS     #>  7 Test Project    25                   25_20230710      Eco1040      MB,MS     #>  8 Test Project    26                   26_20230710      Eco7939      MB,MS     #>  9 Test Project    27                   27_20230605      Eco6690      CM, BT    #> 10 Test Project    28                   28_20230605      UBC 4        CM, BT    #> # ℹ 18 more rows #> # ℹ 48 more variables: date_time_checked <dttm>, deployment_start <dttm>, #> #   deployment_end <dttm>, deployment_duration_days <dbl>, #> #   deployment_duration_valid <lgl>, total_visit_or_deployment_time <dbl>, #> #   unit_of_total_time_code <chr>, visit_type <chr>, #> #   camera_status_on_arrival <chr>, battery_level <chr>, #> #   batteries_changed <chr>, number_of_photos <dbl>, quiet_period_s <chr>, … summary(deployments) #> ┌ Test Project ───┐ #> │                 │ #> │   Deployments   │ #> │                 │ #> └─────────────────┘ #> ℹ 15 sample stations in 28 deploymentss. #> ℹ Deployment lengths range between 113 and 245 days. #> ℹ Camera status on arrival summary: #> Active  #>     28 #> ℹ There are 19201 images. Photos per deployment range betwen 189 and 3554. library(mapview) mapview(deployments, zcol = \"sample_station_label\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"image-data","dir":"","previous_headings":"Example Usage","what":"Image data","title":"Tools for QA and validation of Camera Trap data","text":"can read entire directory image data multiple csv files, long follow TimeLapse template. Currently expected follow v20230518 template. , can use summary() method get overview image data. Use qa_deployment_images() function find deployment labels deployment data image data, vice-versa. usually likely deployment labels deployment data missing image data images processed yet. Deployment labels present image data deployment data indicate potential problem. Use merge_deployments_images() join deployment metadata images:","code":"image_data <- read_image_data(data_path) image_data #> # A tibble: 11,833 × 42 #>    root_folder study_area_name sample_station_label deployment_label #>    <chr>       <chr>           <chr>                <chr>            #>  1 100RECNX    Test Project    19_1                 19_1_20230605    #>  2 100RECNX    Test Project    19_1                 19_1_20230605    #>  3 100RECNX    Test Project    19_1                 19_1_20230605    #>  4 100RECNX    Test Project    19_1                 19_1_20230605    #>  5 100RECNX    Test Project    19_1                 19_1_20230605    #>  6 100RECNX    Test Project    19_1                 19_1_20230605    #>  7 100RECNX    Test Project    19_1                 19_1_20230605    #>  8 100RECNX    Test Project    19_1                 19_1_20230605    #>  9 100RECNX    Test Project    19_1                 19_1_20230605    #> 10 100RECNX    Test Project    19_1                 19_1_20230605    #> # ℹ 11,823 more rows #> # ℹ 38 more variables: date_time <dttm>, episode <chr>, species <chr>, #> #   total_count_episode <dbl>, obj_count_image <int>, adult_male <int>, #> #   adult_female <int>, adult_unclassified_sex <int>, yearling_male <int>, #> #   yearling_female <int>, yearling_unclassified_sex <int>, #> #   young_of_year_unclassified_sex <int>, juvenile_unclassified_sex <int>, #> #   male_unclassified_age <int>, female_unclassified_age <int>, … summary(image_data) #> ┌ Test Project ─────┐ #> │                   │ #> │   Image summary   │ #> │                   │ #> └───────────────────┘ #> ℹ 11833 images in 17 deployments at 15 sample stations. #> ℹ Image counts by trigger mode: #> Motion Detection       Time Lapse  #>             8657             3176 #> ℹ 117 images with lens obscured. #> ℹ 4 images starred. #> ! 4 images flagged for review. #> ℹ Dates are between 2022-11-07 and 2023-07-10. #> ℹ Temperatures are between -10 and 37 C. #> ℹ Snow depths are between 0 and 135 cm. #> ℹ Species counts: #> Avian (comments)       Black Bear           Cougar        Mule Deer  #>                6              130               12              155  #> Other (comments)   Pacific Marten     Red Squirrel    Roosevelt Elk  #>                1                2                1               88  #>             <NA>  #>            11438 #> ! Run `qa_deployment_images()` to crosscheck images with deployments. #> ! Run `qa_image_data()` to run various QA checks. qa_deployment_images(deployments, image_data) #> ! The following deployment labels are present in `image_data` but not `deployments`: \"21_1_20230605\", \"2022-11-10\", and \"2023-01-10\" #> ! The following deployment labels are present in `deployments` but not `image_data`: \"21_20230605\", \"19_1_20231107\", \"19_2_20231107\", \"20_20231107\", \"21_20231107\", \"21_2_20231108\", \"25_20231031\", \"26_20231031\", \"27_20231031\", \"28_20231031\", \"29_1_20231031\", \"29_2_20231031\", \"29_3_20231107\", and \"31_20231107\" images_with_metadata <- merge_deployments_images(deployments, image_data) #> ! The following deployment labels are present in `image_data` but not `deployments`: \"21_1_20230605\", \"2022-11-10\", and \"2023-01-10\" #> ! The following deployment labels are present in `deployments` but not `image_data`: \"21_20230605\", \"19_1_20231107\", \"19_2_20231107\", \"20_20231107\", \"21_20231107\", \"21_2_20231108\", \"25_20231031\", \"26_20231031\", \"27_20231031\", \"28_20231031\", \"29_1_20231031\", \"29_2_20231031\", \"29_3_20231107\", and \"31_20231107\" images_with_metadata #> # A tibble: 11,833 × 93 #>    root_folder deployment_label date_time           episode species #>    <chr>       <chr>            <dttm>              <chr>   <chr>   #>  1 100RECNX    19_1_20230605    2022-11-10 15:15:53 1:1|5   <NA>    #>  2 100RECNX    19_1_20230605    2022-11-10 15:15:58 1:2|5   <NA>    #>  3 100RECNX    19_1_20230605    2022-11-10 15:16:25 1:3|5   <NA>    #>  4 100RECNX    19_1_20230605    2022-11-10 15:16:27 1:4|5   <NA>    #>  5 100RECNX    19_1_20230605    2022-11-10 15:16:31 1:5|5   <NA>    #>  6 100RECNX    19_1_20230605    2022-11-11 12:00:00 2:1|1   <NA>    #>  7 100RECNX    19_1_20230605    2022-11-12 12:00:00 3:1|1   <NA>    #>  8 100RECNX    19_1_20230605    2022-11-13 12:00:00 4:1|1   <NA>    #>  9 100RECNX    19_1_20230605    2022-11-14 12:00:00 5:1|1   <NA>    #> 10 100RECNX    19_1_20230605    2022-11-15 12:00:00 6:1|1   <NA>    #> # ℹ 11,823 more rows #> # ℹ 88 more variables: total_count_episode <dbl>, obj_count_image <int>, #> #   adult_male <int>, adult_female <int>, adult_unclassified_sex <int>, #> #   yearling_male <int>, yearling_female <int>, #> #   yearling_unclassified_sex <int>, young_of_year_unclassified_sex <int>, #> #   juvenile_unclassified_sex <int>, male_unclassified_age <int>, #> #   female_unclassified_age <int>, unclassified_life_stage_and_sex <int>, …"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"image-data-qa","dir":"","previous_headings":"Example Usage > Image data","what":"Image Data QA","title":"Tools for QA and validation of Camera Trap data","text":"number common data quality issues can check image data , aside addressed reconciling deployments images. can use qa_image_data() function detect following problems: Check blanks key fields: study area, station label, deployment date, surveyor, trigger mode, temperature, episode Species detected count data Count data species Sum individual count fields equals Total Count Multiple entries Episode number (indicating possible double entry) Ensure dates timelapse images continuous order. blanks unless lens obscured TRUE Look snow depth outliers (e.g., 10, 10, 110, 10, 15, 20) Run qa_image_data() function: can see identified 24 records potential problems. dataset number fields starting QA_ help us know images closer look . original fields, plus QA_ fields least one TRUE value returned:","code":"image_data_qa <- qa_image_data(image_data) dim(image_data_qa) #> [1] 24 53 names(image_data_qa) #>  [1] \"root_folder\"                     \"study_area_name\"                 #>  [3] \"sample_station_label\"            \"deployment_label\"                #>  [5] \"date_time\"                       \"episode_num\"                     #>  [7] \"episode\"                         \"species\"                         #>  [9] \"total_count_episode\"             \"obj_count_image\"                 #> [11] \"adult_male\"                      \"adult_female\"                    #> [13] \"adult_unclassified_sex\"          \"yearling_male\"                   #> [15] \"yearling_female\"                 \"yearling_unclassified_sex\"       #> [17] \"young_of_year_unclassified_sex\"  \"juvenile_unclassified_sex\"       #> [19] \"male_unclassified_age\"           \"female_unclassified_age\"         #> [21] \"unclassified_life_stage_and_sex\" \"antler_class\"                    #> [23] \"animal_identifiable\"             \"animal_tagged\"                   #> [25] \"behaviour_1\"                     \"behaviour_2\"                     #> [27] \"behaviour_3\"                     \"human_use_type\"                  #> [29] \"human_transport_mode\"            \"temperature\"                     #> [31] \"snow_depth\"                      \"snow_is_est\"                     #> [33] \"snow_depth_lower\"                \"snow_depth_upper\"                #> [35] \"lens_obscured\"                   \"starred\"                         #> [37] \"needs_review\"                    \"comment\"                         #> [39] \"surveyor\"                        \"trigger_mode\"                    #> [41] \"file\"                            \"relative_path\"                   #> [43] \"delete_flag\"                     \"QA_BLANK_study_area_name\"        #> [45] \"QA_BLANK_sample_station_label\"   \"QA_BLANK_deployment_label\"       #> [47] \"QA_BLANK_date_time\"              \"QA_BLANK_surveyor\"               #> [49] \"QA_BLANK_trigger_mode\"           \"QA_BLANK_temperature\"            #> [51] \"QA_BLANK_episode\"                \"QA_timelapse_lag\"                #> [53] \"QA_snow_outlier\" select(image_data_qa, root_folder, file, starts_with(\"QA_\")) #> # A tibble: 24 × 12 #>    root_folder   file         QA_BLANK_study_area_name QA_BLANK_sample_station…¹ #>    <chr>         <chr>        <lgl>                    <lgl>                     #>  1 27_20230605   RCNX0030.JPG FALSE                    FALSE                     #>  2 100RECNX      RCNX0114.JPG FALSE                    FALSE                     #>  3 100RECNX      RCNX0118.JPG FALSE                    FALSE                     #>  4 21_2_20230605 RCNX0010.JPG FALSE                    FALSE                     #>  5 100RECNX      RCNX0261.JPG FALSE                    FALSE                     #>  6 100RECNX      RCNX0339.JPG FALSE                    FALSE                     #>  7 100RECNX      RCNX0376.JPG FALSE                    FALSE                     #>  8 29_2_20230605 IMG_0252.JPG FALSE                    FALSE                     #>  9 100RECNX      IMG_0134.JPG FALSE                    FALSE                     #> 10 102RECNX      RCNX0041.JPG FALSE                    FALSE                     #> # ℹ 14 more rows #> # ℹ abbreviated name: ¹​QA_BLANK_sample_station_label #> # ℹ 8 more variables: QA_BLANK_deployment_label <lgl>, #> #   QA_BLANK_date_time <lgl>, QA_BLANK_surveyor <lgl>, #> #   QA_BLANK_trigger_mode <lgl>, QA_BLANK_temperature <lgl>, #> #   QA_BLANK_episode <lgl>, QA_timelapse_lag <lgl>, QA_snow_outlier <lgl>"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"plots","dir":"","previous_headings":"Example Usage","what":"Plots","title":"Tools for QA and validation of Camera Trap data","text":"several plotting functions available help visualize data spot potential problems. default, plots render static images, can created interactive plots setting interactive = TRUE. Interactive plots shown don’t render README.","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"deployment-plot","dir":"","previous_headings":"Example Usage > Plots","what":"Deployment plot","title":"Tools for QA and validation of Camera Trap data","text":"can plot deployments see start ends deployments expected, flag “invalid” deployments (.e., don’t know end time camera stolen, bumped, ran batteries etc.). can make static interactive plots:","code":"plot_deployments(deployments, date_breaks = \"2 months\") # plot_deployments(deployments, interactive = TRUE, date_breaks = \"2 months\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"snow-depth-plot","dir":"","previous_headings":"Example Usage > Plots","what":"Snow depth plot","title":"Tools for QA and validation of Camera Trap data","text":"can plot recorded snow depths across deployments using plot_snow() function image data:","code":"plot_snow(image_data, date_breaks = \"2 months\") # plot_snow(image_data, date_breaks = \"2 months\", interactive = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"detection-plot","dir":"","previous_headings":"Example Usage > Plots","what":"Detection plot","title":"Tools for QA and validation of Camera Trap data","text":"can also plot image timestamps deployment durations alert us potential time mismatches session data image time labels. Mismatches indicate wrong time settings cameras, errors deployment labels (indicates), number data entry errors.","code":"plot_deployment_detections(deployments, image_data, date_breaks = \"2 months\") # plot_deployment_detections(deployments, image_data, interactive = TRUE, date_breaks = \"2 months\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"daily-detection-patterns","dir":"","previous_headings":"Example Usage > Plots","what":"Daily detection patterns","title":"Tools for QA and validation of Camera Trap data","text":"can plot patterns daily detections species:","code":"plot_diel_activity(image_data) # plot_diel_activity(image_data, interactive = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"write-data-to-spi-template","dir":"","previous_headings":"Example Usage","what":"Write Data to SPI template","title":"Tools for QA and validation of Camera Trap data","text":"bccamtrap also functionality write data SPI template submission. Use fill_spi_template() write data SPI template, filling just default required fields. fill tabs except Project Info sheet must fill manually. want control, adding data fields SPI template, use write_to_spi_sheet(). want write existing file, specify file name file template parameters. write columns default columns, specify paired column names form `Destination Column` = data_column. left-hand side syntactically valid name can provided -, spaces must wrapped backticks quotes.","code":"fill_spi_template(   sample_stations,   camera_info,    camera_setup_checks,   image_data,   file = \"~/Desktop/SPI_output.xlsx\" ) write_to_spi_sheet(   sample_stations,   file = \"~/Desktop/SPI_output.xlsx\",   `Number of Cameras` = number_of_cameras,   template = \"~/Desktop/SPI_output.xlsx\" )"},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"getting-help-or-reporting-an-issue","dir":"","previous_headings":"Example Usage","what":"Getting Help or Reporting an Issue","title":"Tools for QA and validation of Camera Trap data","text":"report bugs/issues/feature requests, please file issue.","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"how-to-contribute","dir":"","previous_headings":"Example Usage","what":"How to Contribute","title":"Tools for QA and validation of Camera Trap data","text":"like contribute, please see CONTRIBUTING guidelines. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"license","dir":"","previous_headings":"Example Usage","what":"License","title":"Tools for QA and validation of Camera Trap data","text":"","code":"Copyright 2024 Province of British Columbia  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bccamtrap: Tools for QA and validation of Camera Trap data — bccamtrap-package","title":"bccamtrap: Tools for QA and validation of Camera Trap data — bccamtrap-package","text":"Allows easy semi-automated checking, validation, exploration camera trap data collected according BC RISC standards, tagged using TimeLapse software.","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bccamtrap: Tools for QA and validation of Camera Trap data — bccamtrap-package","text":"Maintainer: Andy Teucher andy.teucher@gmail.com (ORCID) contributors: Province British Columbia [copyright holder]","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Write all data to a new SPI submission file — fill_spi_template","title":"Write all data to a new SPI submission file — fill_spi_template","text":"write default columns tabs SPI template. fine-grained control, use write_to_spi_sheet() sample_station_info, camera_info, cam_setup_checks, image_data.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write all data to a new SPI submission file — fill_spi_template","text":"","code":"fill_spi_template(   sample_station_info,   camera_info,   camera_setup_checks,   image_data,   file,   template = default_spi_template() )"},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write all data to a new SPI submission file — fill_spi_template","text":"sample_station_info object class sample_station_info camera_info object class camera_info camera_setup_checks object class camera_setup_checks image_data data.frame class image_data, read read_image_data(). file path output file (.xls*) template SPI submission template use. Default included package, accessed system.file(\"GENERIC_wildlife_camera_template_v2021.xlsm\", package = \"bccamtrap\")","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write all data to a new SPI submission file — fill_spi_template","text":"path output file","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spatial data frame of deployments — make_deployments","title":"Create a spatial data frame of deployments — make_deployments","text":"Merge data \"Sample Station Info\" \"Camera Setup Checks\" tabs create deployments - time camera deployed running site. \"Invalid\" deployments flagged sampling end date \"Camera Setup Checks\" sampling period 0 days","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spatial data frame of deployments — make_deployments","text":"","code":"make_deployments(path, as_sf = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spatial data frame of deployments — make_deployments","text":"path path RISC workbook as_sf data returned sf object station locations? Default TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spatial data frame of deployments — make_deployments","text":"spatial data.frame (sf) deployments","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize stations on an interactive map — map_stations","title":"Visualize stations on an interactive map — map_stations","text":"input data.frame run qa_stations_spatial(), potential spatial outliers visually flagged.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize stations on an interactive map — map_stations","text":"","code":"map_stations(stations)"},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize stations on an interactive map — map_stations","text":"stations sf data.frame read read_sample_station_info()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize stations on an interactive map — map_stations","text":"mapview object","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge image data with deployment data — merge_deployments_images","title":"Merge image data with deployment data — merge_deployments_images","text":"Attach deployment metadata image data.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge image data with deployment data — merge_deployments_images","text":"","code":"merge_deployments_images(deployments, image_data, as_sf = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge image data with deployment data — merge_deployments_images","text":"deployments deployments data, created make_deployments() image_data data.frame class image_data, read read_image_data(). as_sf data returned sf object station locations? Default TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge image data with deployment data — merge_deployments_images","text":"data.frame class image_data, deployment columns attached","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot image timestamps over deployment periods — plot_deployment_detections","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"Plot detections sample deployments check misaligned time stamps","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"","code":"plot_deployment_detections(   deployments,   image_data,   date_breaks = \"1 month\",   interactive = FALSE )"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"deployments deployments data, created make_deployments() image_data data.frame class image_data, read read_image_data(). date_breaks break dates x axis. See scales::date_breaks(). Default \"1 month\" interactive plot interactive? Default FALSE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"ggplot2 object interactive = FALSE, plotly object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot timelines of image deployments — plot_deployments","title":"Plot timelines of image deployments — plot_deployments","text":"Make plot sampling deployments. plot indicates start end times deployment, station. also shows \"invalid\" sample deployments, example camera moved, stolen, ran batteries etc. indicated light grey line end point.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot timelines of image deployments — plot_deployments","text":"","code":"plot_deployments(deployments, date_breaks = \"1 month\", interactive = FALSE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot timelines of image deployments — plot_deployments","text":"deployments deployments data, created make_deployments() date_breaks break dates x axis. See scales::date_breaks(). Default \"1 month\" interactive plot interactive? Default FALSE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot timelines of image deployments — plot_deployments","text":"ggplot2 object interactive = FALSE, plotly object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot daily activity of species detected by motion detection — plot_diel_activity","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"Plot daily activity species detected motion detection","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"","code":"plot_diel_activity(image_data, interactive = FALSE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"image_data data.frame class image_data, read read_image_data(). interactive plot interactive? Default FALSE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"ggplot2 object interactive = FALSE, plotly object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot snow depths across deployments — plot_snow","title":"Plot snow depths across deployments — plot_snow","text":"Plot snow depths across deployments","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot snow depths across deployments — plot_snow","text":"","code":"plot_snow(image_data, date_breaks = \"1 month\", interactive = FALSE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot snow depths across deployments — plot_snow","text":"image_data data.frame class image_data, read read_image_data(). date_breaks break dates x axis. See scales::date_breaks(). Default \"1 month\" interactive plot interactive? Default FALSE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot snow depths across deployments — plot_snow","text":"ggplot2 object interactive = FALSE, plotly object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for mismatched deployment labels in session data and image data — qa_deployment_images","title":"Check for mismatched deployment labels in session data and image data — qa_deployment_images","text":"function mainly called messaging - alerting deployment labels sample session data image data, vice versa.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for mismatched deployment labels in session data and image data — qa_deployment_images","text":"","code":"qa_deployment_images(deployments, image_data)"},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for mismatched deployment labels in session data and image data — qa_deployment_images","text":"deployments deployments data, created make_deployments() image_data data.frame class image_data, read read_image_data().","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for mismatched deployment labels in session data and image data — qa_deployment_images","text":"list two vectors containing mismatched deployment labels","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"Check blanks key fields (study area, station label, deployment date, surveyor, trigger mode, temperature, episode) Species detected count data Count data species Sum subcount fields equals Total Count Multiple entries Episode number (indicating possible double entry) Ensure dates timelapse images continuous order. Snow data blanks unless lens obscured TRUE Look snow depth outliers (e.g., 10, 10, 110, 10, 15, 20)","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"","code":"qa_image_data(image_data, exclude_human_use = TRUE, check_snow = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"image_data data.frame class image_data, read read_image_data(). exclude_human_use images human_use_type indicates motion detection event humans excluded count/species checks? Default TRUE. check_snow show QA performed snow measurements? Default TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"input data frame additional QA_* columns appended, subset rows QA issue flagged.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Check spatial attributes of Sample Station information — qa_stations_spatial","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"checks inconsistent placement stations flag potentially incorrect location information","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"","code":"qa_stations_spatial(stations, quant_thresh = 0.9, dist_thresh = NULL)"},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"stations sf data.frame read read_sample_station_info() quant_thresh quantile distance station stations (compared average distance stations) flagged outlier. Default 0.85. dist_thresh distance (m) distance station stations flagged outlier. default quantile used, can overriden setting numeric value metres.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"input data.frame, new logical column spatial_outlier appended.","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the ","title":"Read the ","text":"read camera setup information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the ","text":"","code":"read_cam_setup_checks(path, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the ","text":"path path RISC workbook ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the ","text":"data.frame camera setup information","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the ","title":"Read the ","text":"read camera information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the ","text":"","code":"read_camera_info(path, as_sf = TRUE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the ","text":"path path RISC workbook as_sf data returned sf object station locations? Default TRUE ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the ","text":"data.frame station information, sf object specified.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read image data from a collection of csvs from TimeLapse — read_image_data","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"Read image data collection csvs TimeLapse","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"","code":"read_image_data(path, pattern, recursive = FALSE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"path path directory image files. pattern optional regular expression. file names match regular expression read. Default FALSE. recursive files found within subfolders path also read? ... arguments passed readr::read_csv()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"data.frame Timelapse image data files found path","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"read project information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"","code":"read_project_info(path, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"path path RISC workbook ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"data.frame project-level information","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the ","title":"Read the ","text":"read sample station information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the ","text":"","code":"read_sample_station_info(path, as_sf = TRUE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the ","text":"path path RISC workbook as_sf data returned sf object station locations? Default TRUE ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the ","text":"data.frame station information, sf object specified.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Sample Station Info or Camera Info to a spatial sf boject\n#' — to_sf","title":"Convert Sample Station Info or Camera Info to a spatial sf boject\n#' — to_sf","text":"Convert Sample Station Info Camera Info spatial sf boject #'","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Sample Station Info or Camera Info to a spatial sf boject\n#' — to_sf","text":"","code":"to_sf(x, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Sample Station Info or Camera Info to a spatial sf boject\n#' — to_sf","text":"x Object class sample_station_info camera_info ... arguments passed sf::st_as_sf()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Sample Station Info or Camera Info to a spatial sf boject\n#' — to_sf","text":"input sf object","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write image data to a csv file — write_image_data","title":"Write image data to a csv file — write_image_data","text":"thin wrapper around readr::write_csv(). can use function directly control","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write image data to a csv file — write_image_data","text":"","code":"write_image_data(image_data, file, na = \"\", ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write image data to a csv file — write_image_data","text":"image_data data.frame class image_data, read read_image_data(). file path output csv file na missing values written. Default empty (\"\") ... parameters passed readr::write_csv()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write image data to a csv file — write_image_data","text":"input image_data, invisibly","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write image data to a csv file — write_image_data","text":"","code":"if (FALSE) { write_image_data(image_data, \"my_spi_submission.xlsx\") write_image_data(image_data, \"my_spi_submission.xlsx\", Surveyor = surveyor,    `Survey Observation Photos` = file) }"},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a single data frame to SPI submission template — write_to_spi_sheet","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"want write existing file, specify file name file template parameters.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"","code":"write_to_spi_sheet(x, file, ..., template = default_spi_template())"},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"x object class sample_station_info, camera_info, cam_setup_checks, image_data file path output file (.xls*) ... extra columns x write . Must paired column names form `Destination Column` = data_column. left-hand side syntactically valid name can provided -, spaces must wrapped backticks quotes. See examples. template SPI submission template use. Default included package, accessed system.file(\"GENERIC_wildlife_camera_template_v2021.xlsm\", package = \"bccamtrap\")","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"input x, invisibly","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"","code":"if (FALSE) { write_to_spi_sheet(camera_setup_checks_data, \"my_spi_submission.xlsx\") write_to_spi_sheet(image_data, \"my_spi_submission.xlsx\", Surveyor = surveyor,    `Survey Observation Photos` = file) }"}]
