[{"path":"https://bcgov.github.io/bccamtrap/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, interest fostering open welcoming community, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality. Examples unacceptable behavior participants include: use sexualized language imagery Personal attacks Trolling insulting/derogatory comments Public private harassment Publishing ’s private information, physical electronic addresses, without explicit permission unethical unprofessional conduct Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful. adopting Code Conduct, project maintainers commit fairly consistently applying principles every aspect managing project. Project maintainers follow enforce Code Conduct may permanently removed project team. Code Conduct applies within project spaces public spaces individual representing project community. Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project maintainer andy@andyteucher.ca. complaints reviewed investigated result response deemed necessary appropriate circumstances. Maintainers obligated maintain confidentiality regard reporter incident. Code Conduct adapted Contributor Covenant, version 1.3.0, available http://contributor-covenant.org/version/1/3/0/ project created using bcgovr package.","code":""},{"path":"https://bcgov.github.io/bccamtrap/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"NA","text":"Government employees, public members private sector encouraged contribute repository forking submitting pull request. (new GitHub, might start basic tutorial check detailed guide pull requests.) Pull requests evaluated repository guardians schedule deemed beneficial committed master. contributors retain original copyright stuff, contributing project, grant world-wide, royalty-free, perpetual, irrevocable, non-exclusive, transferable license users terms license project distributed. project created using bcgovr package.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://bcgov.github.io/bccamtrap/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://bcgov.github.io/bccamtrap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andy Teucher. Author, maintainer. Province British Columbia. Copyright holder.","code":""},{"path":"https://bcgov.github.io/bccamtrap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teucher (2024). bccamtrap: Tools QA validation Camera Trap data. R package version 0.0.0.9000,  https://bcgov.github.io/bccamtrap/, https://github.com/bcgov/bccamtrap.","code":"@Manual{,   title = {bccamtrap: Tools for QA and validation of Camera Trap data},   author = {Andy Teucher},   year = {2024},   note = {R package version 0.0.0.9000,  https://bcgov.github.io/bccamtrap/},   url = {https://github.com/bcgov/bccamtrap}, }"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"bccamtrap","dir":"","previous_headings":"","what":"Tools for QA and validation of Camera Trap data","title":"Tools for QA and validation of Camera Trap data","text":"Functions QA validation Camera Trap data documentation, see package documentation website, particular function reference section. document walk main points installing using core functionality package, including bundled Shiny app. Installation Project station metadata Project Metadata: Field Form CSV files Image data Built-plotting functions Sampling sessions Analysis data Write Data SPI template Shiny","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for QA and validation of Camera Trap data","text":"can install development version bccamtrap GitHub using devtools package (may need install first): don’t devtools installed, install : can install bccamtrap package:","code":"install.packages(\"devtools\") devtools::install_github(\"bcgov/bccamtrap\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example Usage","title":"Tools for QA and validation of Camera Trap data","text":"package developed camera trap studies West Coast Region, BC Ministry Water, Land, Resource Stewardship (WLRS). functions package currently assume project session-level data stored BC Government Wildlife Data Submission Template Camera Trap Data, augmented additional fields. image data expected multiple csv files, one folder per project. csv files generated reviewing images TimeLapse software, using template v20230518. Note example data obfuscated protect location projects. begin, set paths project metadata file, folder containing TimeLapse image files:","code":"library(bccamtrap)  metadata_path <- \"~/data/project-files/project_1_RISC_WCR_Database_Template_v20230518.xlsm\" data_path <- \"~/data/wc-wlrs-cam-data/camera-data/project_1/\""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"project-and-station-metadata","dir":"","previous_headings":"Example Usage","what":"Project and station metadata","title":"Tools for QA and validation of Camera Trap data","text":"Read project metadata SPI worksheet. functions read relevant tabs:","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"project-information","dir":"","previous_headings":"Example Usage > Project and station metadata","what":"Project Information","title":"Tools for QA and validation of Camera Trap data","text":"","code":"proj <- read_project_info(metadata_path) proj #> # A tibble: 1 × 4 #>   spi_project_id project_name                  survey_name survey_intensity_code #> * <chr>          <chr>                         <chr>       <chr>                 #> 1 <NA>           2022 - ongoing - Roosevelt E… 2022-2023 … <NA>"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"sample-station-information","dir":"","previous_headings":"Example Usage > Project and station metadata","what":"Sample station information","title":"Tools for QA and validation of Camera Trap data","text":"Read sample station information. creates spatial data frame class \"sf\", sf package. format allows us work regular data frame, also spatial things . Use qa_stations_spatial() function run basic spatial validation data - namely checking spatial outliers: Use summary() method Sample Station Info basic descriptive stats: Use map_stations() function create interactive map stations. show potential outlying stations, indicating possible data errors:","code":"sample_stations <- read_sample_station_info(metadata_path) sample_stations #> Simple feature collection with 21 features and 29 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.8534 ymin: 53.6787 xmax: -125.0136 ymax: 53.73782 #> Geodetic CRS:  WGS 84 #> # A tibble: 21 × 24 #>    wlrs_project_name      study_area_name study_area_photos sample_station_label #>    <chr>                  <chr>           <chr>             <chr>                #>  1 2022 - ongoing - Roos… Test Project    Y                 19_1                 #>  2 2022 - ongoing - Roos… Test Project    Y                 19_2                 #>  3 2022 - ongoing - Roos… Test Project    Y                 20                   #>  4 2022 - ongoing - Roos… Test Project    Y                 21_1                 #>  5 2022 - ongoing - Roos… Test Project    Y                 21_2                 #>  6 2022 - ongoing - Roos… Test Project    Y                 24                   #>  7 2022 - ongoing - Roos… Test Project    Y                 25                   #>  8 2022 - ongoing - Roos… Test Project    Y                 26                   #>  9 2022 - ongoing - Roos… Test Project    Y                 27                   #> 10 2022 - ongoing - Roos… Test Project    Y                 28                   #> # ℹ 11 more rows #> # ℹ 20 more variables: station_status <chr>, number_of_cameras <dbl>, #> #   set_date <dttm>, general_location <chr>, elevation_m <dbl>, #> #   slope_percent <dbl>, aspect_degrees <dbl>, crown_closure_percent <dbl>, #> #   camera_bearing_degrees <dbl>, camera_height_cm <dbl>, #> #   distance_to_feature_m <dbl>, visible_range_m <dbl>, habitat_feature <chr>, #> #   lock <chr>, code <chr>, sample_station_comments <chr>, … sample_stations <- qa_stations_spatial(sample_stations) #> ! Station 19_1 appears to be very far away from other stations. Please check #> its coordinates. summary(sample_stations) #> ┌ Test Project ───────┐ #> │                     │ #> │   Sample Stations   │ #> │                     │ #> └─────────────────────┘ #> ℹ 18 sample stations in 21 locations. #> ℹ Summary of station distances (m): #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>     5.08  4247.81  8712.00 11935.96 14562.39 55516.29 #> ✖ Detected 1 potential spatial outlier. #> ℹ Station status summary: #> Camera Active  Camera Moved  #>            18             3 #> ℹ Set dates: Between 2022-11-07 and 2023-11-16 #> ! Run `map_stations(object)` to view stations on a map. map_stations(sample_stations)"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"camera-information","dir":"","previous_headings":"Example Usage > Project and station metadata","what":"Camera Information:","title":"Tools for QA and validation of Camera Trap data","text":"Read camera information using read_camera_info():","code":"camera_info <- read_camera_info(metadata_path) camera_info #> Simple feature collection with 21 features and 14 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.5219 ymin: 49.28703 xmax: -125.2213 ymax: 49.34728 #> Geodetic CRS:  WGS 84 #> # A tibble: 21 × 9 #>    wlrs_project_name         study_area_name parent_sample_statio…¹ camera_label #>    <chr>                     <chr>           <chr>                  <chr>        #>  1 2022 - ongoing - Rooseve… Test Project    19_1                   UBC 2        #>  2 2022 - ongoing - Rooseve… Test Project    19_2                   UBC 1        #>  3 2022 - ongoing - Rooseve… Test Project    20                     Eco1059      #>  4 2022 - ongoing - Rooseve… Test Project    21_1                   Eco1057      #>  5 2022 - ongoing - Rooseve… Test Project    21_2                   Eco7998      #>  6 2022 - ongoing - Rooseve… Test Project    24                     Eco1050      #>  7 2022 - ongoing - Rooseve… Test Project    25                     Eco1040      #>  8 2022 - ongoing - Rooseve… Test Project    26                     Eco7939      #>  9 2022 - ongoing - Rooseve… Test Project    27                     Eco6690      #> 10 2022 - ongoing - Rooseve… Test Project    28                     UBC 4        #> # ℹ 11 more rows #> # ℹ abbreviated name: ¹​parent_sample_station_label #> # ℹ 5 more variables: make_of_camera_code <chr>, model_of_camera <chr>, #> #   camera_comments <chr>, site_description_comments <chr>, #> #   site_description_date <dttm>"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"camera-setup-and-checks","dir":"","previous_headings":"Example Usage > Project and station metadata","what":"Camera Setup and Checks:","title":"Tools for QA and validation of Camera Trap data","text":"","code":"camera_setup_checks <- read_cam_setup_checks(metadata_path) camera_setup_checks #> ! Data is missing expected column: \"data_qc_complete\" #> # A tibble: 43 × 31 #>    wlrs_project_name       study_area_name sample_station_label deployment_label #>    <chr>                   <chr>           <chr>                <chr>            #>  1 2022 - ongoing - Roose… Test Project    19_1                 <NA>             #>  2 2022 - ongoing - Roose… Test Project    19_2                 <NA>             #>  3 2022 - ongoing - Roose… Test Project    20                   <NA>             #>  4 2022 - ongoing - Roose… Test Project    21_1                 <NA>             #>  5 2022 - ongoing - Roose… Test Project    21_2                 <NA>             #>  6 2022 - ongoing - Roose… Test Project    24                   <NA>             #>  7 2022 - ongoing - Roose… Test Project    25                   <NA>             #>  8 2022 - ongoing - Roose… Test Project    26                   <NA>             #>  9 2022 - ongoing - Roose… Test Project    27                   <NA>             #> 10 2022 - ongoing - Roose… Test Project    28                   <NA>             #> # ℹ 33 more rows #> # ℹ 27 more variables: camera_label <chr>, surveyors <chr>, #> #   date_time_checked <dttm>, sampling_start <dttm>, sampling_end <dttm>, #> #   total_visit_or_deployment_time <dbl>, unit_of_total_time_code <chr>, #> #   visit_type <chr>, camera_status_on_arrival <chr>, battery_level <chr>, #> #   batteries_changed <chr>, number_of_photos <dbl>, quiet_period_s <chr>, #> #   trigger_sensitivity <chr>, trigger_timing_s <dbl>, …"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"deployments","dir":"","previous_headings":"Example Usage > Project and station metadata","what":"Deployments","title":"Tools for QA and validation of Camera Trap data","text":"Rather just looking raw camera setup checks stations, utility assembling sampling deployments combining sample station information camera setup checks. make_deployments() function. handy summary() method well: can use mapview package quickly visualize , setting zcol argument name column ’d like colour points . Clicking point give details deployment.","code":"deployments <- make_deployments(metadata_path) deployments #> ! Data is missing expected column: \"data_qc_complete\" #> Simple feature collection with 28 features and 62 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -130.3966 ymin: 52.92087 xmax: -129.569 ymax: 52.96732 #> Geodetic CRS:  WGS 84 #> # A tibble: 28 × 57 #>    wlrs_project_name       study_area_name sample_station_label deployment_label #>    <chr>                   <chr>           <chr>                <chr>            #>  1 2022 - ongoing - Roose… Test Project    19_1                 19_1_20230605    #>  2 2022 - ongoing - Roose… Test Project    19_2                 19_2_20230605    #>  3 2022 - ongoing - Roose… Test Project    20                   20_20230605      #>  4 2022 - ongoing - Roose… Test Project    21_1                 21_20230605      #>  5 2022 - ongoing - Roose… Test Project    21_2                 21_2_20230605    #>  6 2022 - ongoing - Roose… Test Project    24                   24_20230708      #>  7 2022 - ongoing - Roose… Test Project    25                   25_20230710      #>  8 2022 - ongoing - Roose… Test Project    26                   26_20230710      #>  9 2022 - ongoing - Roose… Test Project    27                   27_20230605      #> 10 2022 - ongoing - Roose… Test Project    28                   28_20230605      #> # ℹ 18 more rows #> # ℹ 53 more variables: camera_label <chr>, surveyors <chr>, #> #   date_time_checked <dttm>, sampling_end <dttm>, #> #   total_visit_or_deployment_time <dbl>, unit_of_total_time_code <chr>, #> #   visit_type <chr>, camera_status_on_arrival <chr>, battery_level <chr>, #> #   batteries_changed <chr>, number_of_photos <dbl>, quiet_period_s <chr>, #> #   trigger_sensitivity <chr>, trigger_timing_s <dbl>, … summary(deployments) #> ┌ Test Project ───┐ #> │                 │ #> │   Deployments   │ #> │                 │ #> └─────────────────┘ #> ℹ 15 sample stations in 28 deploymentss. #> ℹ Deployment lengths range between 113 and 245 days. #> ℹ Camera status on arrival summary: #> Active  #>     28 #> ℹ There are 19201 images. Photos per deployment range betwen 189 and 3554. library(mapview) mapview(deployments, zcol = \"sample_station_label\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"project-metadata-field-form-csv-files","dir":"","previous_headings":"Example Usage","what":"Project Metadata: Field Form CSV files","title":"Tools for QA and validation of Camera Trap data","text":"also two functions reading different csv outputs field forms: Sample Stations, Deployments:","code":"sample_station_info <- read_sample_station_csv(\"path-to-sample-stations.csv\") deployments <- read_deployments_csv(\"path-to-deployments.csv\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"image-data","dir":"","previous_headings":"Example Usage","what":"Image data","title":"Tools for QA and validation of Camera Trap data","text":"can read entire directory image data multiple csv files, long follow TimeLapse template. Currently expected follow v20230518 template. , can use summary() method get overview image data. Use qa_deployment_images() function find deployment labels deployment data image data, vice-versa. usually likely deployment labels deployment data missing image data images processed yet. Deployment labels present image data deployment data indicate potential problem. Use merge_deployments_images() join deployment metadata images:","code":"image_data <- read_image_data(data_path) image_data #> # A tibble: 11,833 × 43 #>    root_folder study_area_name sample_station_label deployment_label #>    <chr>       <chr>           <chr>                <chr>            #>  1 100RECNX    Test Project    19_1                 19_1_20230605    #>  2 100RECNX    Test Project    19_1                 19_1_20230605    #>  3 100RECNX    Test Project    19_1                 19_1_20230605    #>  4 100RECNX    Test Project    19_1                 19_1_20230605    #>  5 100RECNX    Test Project    19_1                 19_1_20230605    #>  6 100RECNX    Test Project    19_1                 19_1_20230605    #>  7 100RECNX    Test Project    19_1                 19_1_20230605    #>  8 100RECNX    Test Project    19_1                 19_1_20230605    #>  9 100RECNX    Test Project    19_1                 19_1_20230605    #> 10 100RECNX    Test Project    19_1                 19_1_20230605    #> # ℹ 11,823 more rows #> # ℹ 39 more variables: date_time <dttm>, episode <chr>, species <chr>, #> #   total_count_episode <dbl>, obj_count_image <int>, adult_male <int>, #> #   adult_female <int>, adult_unclassified_sex <int>, yearling_male <int>, #> #   yearling_female <int>, yearling_unclassified_sex <int>, #> #   young_of_year_unclassified_sex <int>, juvenile_unclassified_sex <int>, #> #   male_unclassified_age <int>, female_unclassified_age <int>, … summary(image_data) #> ┌ Test Project ─────┐ #> │                   │ #> │   Image summary   │ #> │                   │ #> └───────────────────┘ #> ℹ 11833 images in 17 deployments at 15 sample stations. #> ℹ Image counts by trigger mode: #> Motion Detection       Time Lapse  #>             8657             3176 #> ℹ 117 images with lens obscured. #> ℹ 4 images starred. #> ! 4 images flagged for review. #> ℹ Dates are between 2022-11-07 and 2023-07-10. #> ℹ Temperatures are between -10 and 37 C. #> ℹ Snow depths are between 0 and 135 cm. #> ℹ Species counts: #> Avian (comments)       Black Bear           Cougar        Mule Deer  #>                6              130               12              155  #> Other (comments)   Pacific Marten     Red Squirrel    Roosevelt Elk  #>                1                2                1               88  #>             <NA>  #>            11438 #> ! Run `qa_deployment_images()` to crosscheck images with deployments. #> ! Run `qa_image_data()` to run various QA checks. qa_deployment_images(deployments, image_data) #> ! The following deployment labels are present in `image_data` but not `deployments`: \"21_1_20230605\", \"2022-11-10\", and \"2023-01-10\" #> ! The following deployment labels are present in `deployments` but not `image_data`: \"21_20230605\", \"19_1_20231107\", \"19_2_20231107\", \"20_20231107\", \"21_20231107\", \"21_2_20231108\", \"25_20231031\", \"26_20231031\", \"27_20231031\", \"28_20231031\", \"29_1_20231031\", \"29_2_20231031\", \"29_3_20231107\", and \"31_20231107\" images_with_metadata <- merge_deployments_images(deployments, image_data) #> ! The following deployment labels are present in `image_data` but not `deployments`: \"21_1_20230605\", \"2022-11-10\", and \"2023-01-10\" #> ! The following deployment labels are present in `deployments` but not `image_data`: \"21_20230605\", \"19_1_20231107\", \"19_2_20231107\", \"20_20231107\", \"21_20231107\", \"21_2_20231108\", \"25_20231031\", \"26_20231031\", \"27_20231031\", \"28_20231031\", \"29_1_20231031\", \"29_2_20231031\", \"29_3_20231107\", and \"31_20231107\" images_with_metadata #> Simple feature collection with 11833 features and 102 fields (with 1208 geometries empty) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -130.3966 ymin: 52.92237 xmax: -129.569 ymax: 52.96732 #> Geodetic CRS:  WGS 84 #> # A tibble: 11,833 × 97 #>    root_folder deployment_label date_time           episode species #>    <chr>       <chr>            <dttm>              <chr>   <chr>   #>  1 100RECNX    19_1_20230605    2022-11-10 15:15:53 1:1|5   <NA>    #>  2 100RECNX    19_1_20230605    2022-11-10 15:15:58 1:2|5   <NA>    #>  3 100RECNX    19_1_20230605    2022-11-10 15:16:25 1:3|5   <NA>    #>  4 100RECNX    19_1_20230605    2022-11-10 15:16:27 1:4|5   <NA>    #>  5 100RECNX    19_1_20230605    2022-11-10 15:16:31 1:5|5   <NA>    #>  6 100RECNX    19_1_20230605    2022-11-11 12:00:00 2:1|1   <NA>    #>  7 100RECNX    19_1_20230605    2022-11-12 12:00:00 3:1|1   <NA>    #>  8 100RECNX    19_1_20230605    2022-11-13 12:00:00 4:1|1   <NA>    #>  9 100RECNX    19_1_20230605    2022-11-14 12:00:00 5:1|1   <NA>    #> 10 100RECNX    19_1_20230605    2022-11-15 12:00:00 6:1|1   <NA>    #> # ℹ 11,823 more rows #> # ℹ 92 more variables: total_count_episode <dbl>, obj_count_image <int>, #> #   adult_male <int>, adult_female <int>, adult_unclassified_sex <int>, #> #   yearling_male <int>, yearling_female <int>, #> #   yearling_unclassified_sex <int>, young_of_year_unclassified_sex <int>, #> #   juvenile_unclassified_sex <int>, male_unclassified_age <int>, #> #   female_unclassified_age <int>, unclassified_life_stage_and_sex <int>, …"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"image-data-qa","dir":"","previous_headings":"Example Usage > Image data","what":"Image Data QA","title":"Tools for QA and validation of Camera Trap data","text":"number common data quality issues can check image data , aside addressed reconciling deployments images. can use qa_image_data() function detect following problems: Check blanks key fields: study area, station label, deployment date, surveyor, trigger mode, temperature, episode Species detected count data Count data species Sum individual count fields equals Total Count Multiple entries Episode number (indicating possible double entry) Ensure dates timelapse images continuous order. blanks unless lens obscured TRUE Look snow depth outliers (e.g., 10, 10, 110, 10, 15, 20) Run qa_image_data() function: can see identified 24 records potential problems. dataset number fields starting QA_ help us know images closer look . original fields, plus QA_ fields least one TRUE value returned: can use functions dplyr package select view just QA columns. bccamtrap uses dplyr dependency, already installed system, though need loaded.","code":"image_data_qa <- qa_image_data(image_data) dim(image_data_qa) #> [1] 24 49 # Print the names of the columns, just to see what we're working with names(image_data_qa) #>  [1] \"root_folder\"                              #>  [2] \"study_area_name\"                          #>  [3] \"sample_station_label\"                     #>  [4] \"deployment_label\"                         #>  [5] \"date_time\"                                #>  [6] \"episode_num\"                              #>  [7] \"episode\"                                  #>  [8] \"species\"                                  #>  [9] \"total_count_episode\"                      #> [10] \"obj_count_image\"                          #> [11] \"adult_male\"                               #> [12] \"adult_female\"                             #> [13] \"adult_unclassified_sex\"                   #> [14] \"yearling_male\"                            #> [15] \"yearling_female\"                          #> [16] \"yearling_unclassified_sex\"                #> [17] \"young_of_year_unclassified_sex\"           #> [18] \"juvenile_unclassified_sex\"                #> [19] \"male_unclassified_age\"                    #> [20] \"female_unclassified_age\"                  #> [21] \"unclassified_life_stage_and_sex\"          #> [22] \"antler_class\"                             #> [23] \"animal_identifiable\"                      #> [24] \"animal_tagged\"                            #> [25] \"behaviour_1\"                              #> [26] \"behaviour_2\"                              #> [27] \"behaviour_3\"                              #> [28] \"human_use_type\"                           #> [29] \"human_transport_mode\"                     #> [30] \"temperature\"                              #> [31] \"snow_depth\"                               #> [32] \"snow_index\"                               #> [33] \"snow_is_est\"                              #> [34] \"snow_depth_lower\"                         #> [35] \"snow_depth_upper\"                         #> [36] \"lens_obscured\"                            #> [37] \"starred\"                                  #> [38] \"needs_review\"                             #> [39] \"comment\"                                  #> [40] \"surveyor\"                                 #> [41] \"trigger_mode\"                             #> [42] \"file\"                                     #> [43] \"relative_path\"                            #> [44] \"delete_flag\"                              #> [45] \"QA_species_UNMATCHED_total_count_episode\" #> [46] \"QA_total_count_episode_UNMATCHED_species\" #> [47] \"QA_sum_counts\"                            #> [48] \"QA_dup_episode\"                           #> [49] \"QA_snow_blank\" library(dplyr)  select(image_data_qa, root_folder, file, starts_with(\"QA_\")) #> # A tibble: 24 × 7 #>    root_folder file  QA_species_UNMATCHED…¹ QA_total_count_episo…² QA_sum_counts #>    <chr>       <chr> <lgl>                  <lgl>                  <lgl>         #>  1 27_20230605 RCNX… TRUE                   FALSE                  TRUE          #>  2 100RECNX    RCNX… FALSE                  FALSE                  FALSE         #>  3 100RECNX    RCNX… FALSE                  FALSE                  FALSE         #>  4 21_2_20230… RCNX… FALSE                  FALSE                  TRUE          #>  5 100RECNX    RCNX… FALSE                  FALSE                  FALSE         #>  6 100RECNX    RCNX… FALSE                  FALSE                  FALSE         #>  7 100RECNX    RCNX… FALSE                  FALSE                  FALSE         #>  8 29_2_20230… IMG_… FALSE                  FALSE                  TRUE          #>  9 100RECNX    IMG_… FALSE                  FALSE                  TRUE          #> 10 102RECNX    RCNX… FALSE                  FALSE                  FALSE         #> # ℹ 14 more rows #> # ℹ abbreviated names: ¹​QA_species_UNMATCHED_total_count_episode, #> #   ²​QA_total_count_episode_UNMATCHED_species #> # ℹ 2 more variables: QA_dup_episode <lgl>, QA_snow_blank <lgl>"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"built-in-plotting-functions","dir":"","previous_headings":"Example Usage","what":"Built-in plotting functions","title":"Tools for QA and validation of Camera Trap data","text":"several plotting functions available help visualize data spot potential problems. default, plots render static images, can created interactive plots setting interactive = TRUE. Interactive plots shown don’t render README.","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"deployment-plot","dir":"","previous_headings":"Example Usage > Built-in plotting functions","what":"Deployment plot","title":"Tools for QA and validation of Camera Trap data","text":"can plot deployments see start ends deployments expected, flag “invalid” deployments (.e., don’t know end time camera stolen, bumped, ran batteries etc.). can make static interactive plots:","code":"plot_deployments(deployments, date_breaks = \"2 months\") # plot_deployments(deployments, interactive = TRUE, date_breaks = \"2 months\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"snow-depth-plot","dir":"","previous_headings":"Example Usage > Built-in plotting functions","what":"Snow depth plot","title":"Tools for QA and validation of Camera Trap data","text":"can plot recorded snow depths across deployments using plot_snow() function image data:","code":"plot_snow(image_data, date_breaks = \"2 months\") #> Warning: Removed 109 rows containing missing values or values outside the scale range #> (`geom_interactive_point()`). # plot_snow(image_data, date_breaks = \"2 months\", interactive = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"detection-plot","dir":"","previous_headings":"Example Usage > Built-in plotting functions","what":"Detection plot","title":"Tools for QA and validation of Camera Trap data","text":"can also plot image timestamps deployment durations alert us potential time mismatches session data image time labels. Mismatches indicate wrong time settings cameras, errors deployment labels (indicates), number data entry errors.","code":"plot_deployment_detections(deployments, image_data, date_breaks = \"2 months\") # plot_deployment_detections(deployments, image_data, interactive = TRUE, date_breaks = \"2 months\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"daily-detection-patterns","dir":"","previous_headings":"Example Usage > Built-in plotting functions","what":"Daily detection patterns","title":"Tools for QA and validation of Camera Trap data","text":"can plot patterns daily detections species:","code":"plot_diel_activity(image_data) # plot_diel_activity(image_data, interactive = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"sampling-sessions","dir":"","previous_headings":"Example Usage","what":"Sampling sessions","title":"Tools for QA and validation of Camera Trap data","text":"Define sampling sessions based image data using make_sample_sessions() function. function : Set sampling_start deployment_start Notes dates first last photos deployment Counts photos (total, motion-detection) Determines sampling period less deployment period Determines gaps sampling period due obscured lens Determines total length sample period (last photo date - first photo date - number days lens obscured) can set custom start end dates sample session well:","code":"make_sample_sessions(image_data) #> # A tibble: 17 × 13 #>    deployment_label sample_start_date sample_end_date n_photos n_photos_spp_id #>    <chr>            <date>            <date>             <int>           <int> #>  1 19_1_20230605    2022-11-10        2023-06-05           285              11 #>  2 19_2_20230605    2022-11-15        2023-06-05           411              26 #>  3 20_20230605      2022-11-10        2023-06-05          1857             101 #>  4 21_1_20230605    2022-11-10        2023-06-05           959              78 #>  5 21_2_20230605    2022-11-18        2023-06-05           569              23 #>  6 24_20230708      2022-11-18        2023-07-08           521              18 #>  7 25_20230710      2022-11-18        2023-07-10          3554              24 #>  8 26_20230710      2022-11-07        2023-07-10           621              50 #>  9 27_20230605      2022-11-07        2023-06-05           259               7 #> 10 28_20230605      2022-11-15        2023-06-05           566              14 #> 11 29_1_20230605    2022-11-07        2023-06-05           390              10 #> 12 2022-11-10       2022-11-07        2022-11-10            52               5 #> 13 29_2_20230605    2022-11-10        2023-06-05           530              34 #> 14 29_3_20230605    2022-11-18        2023-06-05           419              15 #> 15 2023-01-10       2022-11-15        2023-01-10           197               8 #> 16 31_20230605      2023-01-25        2023-06-05           382              15 #> 17 35_20230708      2022-11-18        2023-07-08           261               3 #> # ℹ 8 more variables: n_species <int>, n_individuals <dbl>, #> #   n_motion_photos <int>, n_motion_photos_lens_obscured <int>, #> #   n_tl_photos <int>, n_tl_photos_lens_obscured <int>, sample_gaps <lgl>, #> #   trap_days <int> make_sample_sessions(   image_data,    sample_start_date = \"2022-12-01\",    sample_end_date = \"2023-04-30\" ) #> # A tibble: 16 × 13 #>    deployment_label sample_start_date sample_end_date n_photos n_photos_spp_id #>    <chr>            <date>            <date>             <int>           <int> #>  1 19_1_20230605    2022-12-01        2023-04-30           191               6 #>  2 19_2_20230605    2022-12-01        2023-04-30           290              16 #>  3 20_20230605      2022-12-01        2023-04-30           662              31 #>  4 21_1_20230605    2022-12-01        2023-04-30           684              62 #>  5 21_2_20230605    2022-12-01        2023-04-30           450              15 #>  6 24_20230708      2022-12-01        2023-04-30           166               3 #>  7 25_20230710      2022-12-01        2023-04-30           165               0 #>  8 26_20230710      2022-12-01        2023-04-30           163               1 #>  9 27_20230605      2022-12-01        2023-04-30           152               1 #> 10 28_20230605      2022-12-01        2023-04-30           162               3 #> 11 29_1_20230605    2022-12-01        2023-04-30           241               5 #> 12 29_2_20230605    2022-12-01        2023-04-30           415              18 #> 13 29_3_20230605    2022-12-01        2023-04-30           226               5 #> 14 2023-01-10       2022-12-01        2023-01-10            95               4 #> 15 31_20230605      2023-01-25        2023-04-30           311               8 #> 16 35_20230708      2022-12-01        2023-04-30           152               0 #> # ℹ 8 more variables: n_species <int>, n_individuals <dbl>, #> #   n_motion_photos <int>, n_motion_photos_lens_obscured <int>, #> #   n_tl_photos <int>, n_tl_photos_lens_obscured <int>, sample_gaps <lgl>, #> #   trap_days <int>"},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"relative-activity-index-rai","dir":"","previous_headings":"Example Usage > Analysis data","what":"Relative Activity Index (RAI)","title":"Tools for QA and validation of Camera Trap data","text":"Calculate Relative Activity Index sample sessions using sample_rai(). default, calculates RAI per species using sample start end dates data deployment: can set subset species /deployment labels, similar make_sample_sessions(), set custom session start end dates: can also calculate RAI across deployments setting by_deployment = FALSE: can compare total count RAI across species: Using ggplot2 package, can plot :  can group deployment compare across deployments:","code":"sample_rai(image_data) #> # A tibble: 53 × 8 #>    deployment_label sample_start_date sample_end_date trap_days species       #>    <chr>            <date>            <date>              <int> <chr>         #>  1 19_1_20230605    2022-11-10        2023-06-05            207 Black Bear    #>  2 19_1_20230605    2022-11-10        2023-06-05            207 Cougar        #>  3 19_1_20230605    2022-11-10        2023-06-05            207 Roosevelt Elk #>  4 19_2_20230605    2022-11-15        2023-06-05            201 Black Bear    #>  5 19_2_20230605    2022-11-15        2023-06-05            201 Mule Deer     #>  6 19_2_20230605    2022-11-15        2023-06-05            201 Roosevelt Elk #>  7 2022-11-10       2022-11-07        2022-11-10              3 Mule Deer     #>  8 2022-11-10       2022-11-07        2022-11-10              3 Roosevelt Elk #>  9 2023-01-10       2022-11-15        2023-01-10             56 Cougar        #> 10 2023-01-10       2022-11-15        2023-01-10             56 Roosevelt Elk #> # ℹ 43 more rows #> # ℹ 3 more variables: n_detections <int>, total_count <dbl>, rai <dbl> sample_rai(   image_data,    species = \"Roosevelt Elk\",    deployment_label = c(\"19_2_20230605\", \"29_1_20230605\"),   sample_start_date = \"2022-12-01\",    sample_end_date = \"2023-04-30\" ) #> # A tibble: 2 × 8 #>   deployment_label sample_start_date sample_end_date trap_days species       #>   <chr>            <date>            <date>              <int> <chr>         #> 1 19_2_20230605    2022-12-01        2023-04-30            151 Roosevelt Elk #> 2 29_1_20230605    2022-12-01        2023-04-30            148 Roosevelt Elk #> # ℹ 3 more variables: n_detections <int>, total_count <dbl>, rai <dbl> sample_rai(   image_data,    species = \"Roosevelt Elk\",    by_deployment = FALSE,   sample_start_date = \"2022-12-01\",    sample_end_date = \"2023-04-30\" ) #> # A tibble: 1 × 7 #>   sample_start_date sample_end_date trap_days species   n_detections total_count #>   <date>            <date>              <int> <chr>            <int>       <dbl> #> 1 2022-12-01        2023-04-30            151 Roosevel…           51         146 #> # ℹ 1 more variable: rai <dbl> spp_comp <- sample_rai(   image_data,    by_deployment = FALSE,   by_species = TRUE,   sample_start_date = \"2022-12-01\",    sample_end_date = \"2023-04-30\" ) spp_comp #> # A tibble: 7 × 7 #>   sample_start_date sample_end_date trap_days species   n_detections total_count #>   <date>            <date>              <int> <chr>            <int>       <dbl> #> 1 2022-12-01        2023-04-30            131 Avian (c…            1           1 #> 2 2022-12-01        2023-04-30            151 Black Be…           28          28 #> 3 2022-12-01        2023-04-30            151 Cougar               8           8 #> 4 2022-12-01        2023-04-30            151 Mule Deer           77         105 #> 5 2022-12-01        2023-04-30            131 Other (c…            1           1 #> 6 2022-12-01        2023-04-30            151 Pacific …            2           2 #> 7 2022-12-01        2023-04-30            151 Roosevel…           51         146 #> # ℹ 1 more variable: rai <dbl> library(ggplot2)  ggplot(spp_comp, aes(x = rai, y = species)) +    geom_point(colour = \"darkgreen\") +    geom_text(aes(label = total_count), nudge_x = 0.05, nudge_y = 0.1) +   theme_classic() +    labs(title = \"RAI of all species detected, across all deployments\",         caption = \"Numbers beside points represent total number of individuals detected\",        x = \"Relative Activity Index\", y = \"Species\") spp_comp_by_dep <- sample_rai(   image_data,    by_deployment = TRUE,   by_species = TRUE,   sample_start_date = \"2022-12-01\",    sample_end_date = \"2023-04-30\" )  ggplot(spp_comp_by_dep, aes(x = rai, y = species, colour = deployment_label)) +    geom_point() +    geom_text(aes(label = total_count), nudge_x = 0.01, nudge_y = 0.1) +   theme_classic() +    labs(title = \"RAI of all species detected, across all deployments\",         caption = \"Numbers beside points represent total number of individuals detected\",        x = \"Relative Activity Index\", y = \"Species\")"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"relative-activity-index-rai-over-time","dir":"","previous_headings":"Example Usage > Analysis data","what":"Relative Activity Index (RAI) over time","title":"Tools for QA and validation of Camera Trap data","text":"Use rai_by_time() calculate RAI time window, optionally calculating statistics using moving window aggregation. can calculate daily statistics, aggregate week, month, year. default, calculates daily metrics, aggregating across deployments. can select single species, calculate daily rolling values. default window size 7, can changed k parameter.  Since data returned rai_by_time also includes snow temperature data, can plot , compare RAI environment variables:  can change way snow measurements aggregated across sites by_deployment = FALSE. default uses max, can set aggregation function, like mean:  can compare Elk activity snow levels:  temperature:  can compare raw counts vs snow depth across deployments. Note daily counts (= \"date\") by_deployment = TRUE, “trap_days” row equal 1, RAI bit meaningless can just compare raw counts:  want compare RAI two species, can specify species argument, colour plot species (left species argument blank get line per species, looks visually busy).  use compare total monthly activity species among deployments:","code":"rai_by_time(image_data) #> # A tibble: 2,205 × 9 #>    species          study_area_name date       max_snow_index mean_temperature #>    <chr>            <chr>           <date>              <dbl>            <dbl> #>  1 Avian (comments) Test Project    2022-11-07              2             6    #>  2 Avian (comments) Test Project    2022-11-08              2            -1.75 #>  3 Avian (comments) Test Project    2022-11-09              2            -3.25 #>  4 Avian (comments) Test Project    2022-11-10              2             1.2  #>  5 Avian (comments) Test Project    2022-11-11              2             1    #>  6 Avian (comments) Test Project    2022-11-12              2             1.57 #>  7 Avian (comments) Test Project    2022-11-13              2             2.57 #>  8 Avian (comments) Test Project    2022-11-14              2             1.71 #>  9 Avian (comments) Test Project    2022-11-15              2             0.5  #> 10 Avian (comments) Test Project    2022-11-16              2            -1    #> # ℹ 2,195 more rows #> # ℹ 4 more variables: n_detections <int>, total_count <dbl>, trap_days <int>, #> #   rai <dbl> elk_roll_avg <- rai_by_time(   image_data,    by = \"date\",   species = \"Roosevelt Elk\",   roll = TRUE ) elk_roll_avg #> # A tibble: 245 × 15 #>    species       study_area_name date       max_snow_index mean_temperature #>    <chr>         <chr>           <date>              <dbl>            <dbl> #>  1 Roosevelt Elk Test Project    2022-11-07              2             6    #>  2 Roosevelt Elk Test Project    2022-11-08              2            -1.75 #>  3 Roosevelt Elk Test Project    2022-11-09              2            -3.25 #>  4 Roosevelt Elk Test Project    2022-11-10              2             1.2  #>  5 Roosevelt Elk Test Project    2022-11-11              2             1    #>  6 Roosevelt Elk Test Project    2022-11-12              2             1.57 #>  7 Roosevelt Elk Test Project    2022-11-13              2             2.57 #>  8 Roosevelt Elk Test Project    2022-11-14              2             1.71 #>  9 Roosevelt Elk Test Project    2022-11-15              2             0.5  #> 10 Roosevelt Elk Test Project    2022-11-16              2            -1    #> # ℹ 235 more rows #> # ℹ 10 more variables: n_detections <int>, total_count <dbl>, trap_days <int>, #> #   rai <dbl>, roll_mean_max_snow <dbl>, roll_mean_temp <dbl>, #> #   roll_trap_days <int>, roll_detections <int>, roll_count <dbl>, #> #   roll_rai <dbl>  ggplot(elk_roll_avg, aes(x = date, y = roll_rai)) +    geom_line(colour = \"darkgreen\") +    theme_classic() +    labs(     title = \"Rolling seven day average of Elk RAI\",      x = \"Date\",      y = \"7 day rolling average RAI\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_line()`). ggplot(elk_roll_avg, aes(x = date, y = roll_mean_max_snow)) +    geom_line(colour = \"darkblue\") +    theme_classic() +    labs(     title = \"Rolling seven day average of average maximum snow index across sites\",      x = \"Date\",      y = \"7 day rolling average of maximum snow index\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_line()`). elk_roll_avg <- rai_by_time(   image_data,    by = \"date\",   species = \"Roosevelt Elk\",   roll = TRUE,   snow_agg = \"mean\" )  ggplot(elk_roll_avg, aes(x = date, y = roll_mean_mean_snow)) +    geom_line(colour = \"darkblue\") +    theme_classic() +    labs(     title = \"Rolling seven day average of mean snow index across sites\",      x = \"Date\",      y = \"7 day rolling average of mean snow index\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_line()`). ggplot(elk_roll_avg, aes(x = roll_mean_mean_snow, y = roll_rai, colour = mean_temperature)) +    geom_point() +    scale_colour_viridis_c(option = \"inferno\") +    theme_classic() +    labs(     title = \"Rolling seven day average of Elk RAI compared to Snow Index\",      x = \"7 day rolling average of mean Snow Index across sites\",      y = \"7 day rolling average RAI\",     colour = \"Temperature\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`). ggplot(elk_roll_avg, aes(x = roll_mean_temp, y = roll_rai)) +    geom_point() +    theme_classic() +    labs(     title = \"Rolling seven day average of Elk RAI compared to Temperature\",      x = \"7 day rolling average of mean temperature across sites\",      y = \"7 day rolling average RAI\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`). elk_rai_by_dep <- rai_by_time(   image_data,    by = \"date\",   species = \"Roosevelt Elk\",   by_deployment = TRUE )  ggplot(elk_rai_by_dep, aes(x = snow_index, y = total_count, colour = deployment_label)) +    facet_wrap(vars(deployment_label)) +    geom_point() all_spp_roll_avg <- rai_by_time(   image_data,    by = \"date\",   species = c(\"Roosevelt Elk\", \"Cougar\"),   by_species = TRUE,   roll = TRUE   )  ggplot(all_spp_roll_avg, aes(x = date, y = roll_rai, colour = species)) +    geom_line() +    theme_classic() +    labs(     title = \"Rolling seven day average of RAI for Cougar and Elk\",      x = \"Date\",      y = \"7 day rolling average RAI\"   ) #> Warning: Removed 12 rows containing missing values or values outside the scale range #> (`geom_line()`). total_rai_by_month <- rai_by_time(   image_data,    by = \"month\",   by_species = FALSE,   by_deployment = TRUE   )  ggplot(total_rai_by_month, aes(x = month, y = rai, fill = deployment_label)) +    geom_col(position = \"dodge\") +    theme_classic() +    labs(     title = \"Monthly RAI of all species\",      x = \"Month\",      y = \"RAI\"   )"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"write-data-to-spi-template","dir":"","previous_headings":"Example Usage","what":"Write Data to SPI template","title":"Tools for QA and validation of Camera Trap data","text":"bccamtrap also functionality write data SPI template submission. Use fill_spi_template() write data SPI template, filling just default required fields. fill tabs except Project Info sheet must fill manually. want control, adding data fields SPI template, use write_to_spi_sheet(). want write existing file, specify file name file template parameters. write columns default columns, specify paired column names form `Destination Column` = data_column. left-hand side syntactically valid name can provided -, spaces must wrapped backticks quotes.","code":"fill_spi_template(   sample_stations,   camera_info,    camera_setup_checks,   image_data,   file = \"~/Desktop/SPI_output.xlsx\" ) write_to_spi_sheet(   sample_stations,   file = \"~/Desktop/SPI_output.xlsx\",   `Number of Cameras` = number_of_cameras,   template = \"~/Desktop/SPI_output.xlsx\" )"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"writing-to-spi-template-using-field-form-data","dir":"","previous_headings":"Example Usage > Write Data to SPI template","what":"Writing to SPI template using field form data","title":"Tools for QA and validation of Camera Trap data","text":"write data imported field form data, must use fill_spi_template_ff() function, passing sample_station_info deployments, well image_data. want write metadata tabs Sequence Image Data, can leave image_data argument NULL, write file another time write_to_spi_sheet().","code":"sample_station_info <- read_sample_station_csv(\"path-to-sample-stations.csv\") deployments <- read_deployments_csv(\"path-to-deployments.csv\")  fill_spi_template_ff(   sample_stations,   deployments,   image_data,   file = \"~/Desktop/SPI_output_from_ff.xlsx\" )"},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"bccamtrapp-shiny-app","dir":"","previous_headings":"Example Usage","what":"bccamtrapp() Shiny App","title":"Tools for QA and validation of Camera Trap data","text":"package contains Shiny App interactive use package’s functionality. Run app : Data loaded, exported, via inputs left-hand side. can use metadata SPI worksheet, combination csv-based field forms (sample stations deployments). Loading image data done selecting image files dialogue drag--drop. various tabs useful data summaries, QA, generation analysis data: “Project Metadata” “Deployments” rely input metadata files. “QA Deployments vs Images” requires metadata image data files, makes sure compatible. “Image Data QA”, “Sample Sessions”, “Analysis Data” require image data loaded, don’t require metadata. export SPI template submission, need loaded metadata image data. write required fields current SPI template included package. experience error “Maximum upload size exceeded”, can change max_upload_size_mb parameter bccamtrapp() value greater default 50: default 50MB sufficient use-cases. find need , may find degraded performance app consider using bccamtrap functions directly R.","code":"library(bccamtrap) bccamtrapp() bccamtrapp(max_upload_size_mb = 100)"},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"getting-help-or-reporting-an-issue","dir":"","previous_headings":"Example Usage","what":"Getting Help or Reporting an Issue","title":"Tools for QA and validation of Camera Trap data","text":"report bugs/issues/feature requests, please file issue.","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"how-to-contribute","dir":"","previous_headings":"Example Usage","what":"How to Contribute","title":"Tools for QA and validation of Camera Trap data","text":"like contribute, please see CONTRIBUTING guidelines. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://bcgov.github.io/bccamtrap/index.html","id":"license","dir":"","previous_headings":"Example Usage","what":"License","title":"Tools for QA and validation of Camera Trap data","text":"","code":"Copyright 2024 Province of British Columbia  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bccamtrap: Tools for QA and validation of Camera Trap data — bccamtrap-package","title":"bccamtrap: Tools for QA and validation of Camera Trap data — bccamtrap-package","text":"Allows easy semi-automated checking, validation, exploration camera trap data collected according BC RISC standards, tagged using TimeLapse software.","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bccamtrap: Tools for QA and validation of Camera Trap data — bccamtrap-package","text":"Maintainer: Andy Teucher andy.teucher@gmail.com (ORCID) contributors: Province British Columbia [copyright holder]","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrapp.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Shiny app — bccamtrapp","title":"Launch Shiny app — bccamtrapp","text":"Interactive interface Data import, QA, export.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrapp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Shiny app — bccamtrapp","text":"","code":"bccamtrapp(browser = TRUE, max_upload_size_mb = 50, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrapp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch Shiny app — bccamtrapp","text":"browser app launched default browser? Default TRUE max_upload_size_mb maximum file size able load app, MB. Default 50. ... passed options shiny::shinyApp()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/bccamtrapp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Shiny app — bccamtrapp","text":"","code":"if (FALSE) bccamtrapp()"},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Write all data to a new SPI submission file — fill_spi_template","title":"Write all data to a new SPI submission file — fill_spi_template","text":"write default columns tabs SPI template. fine-grained control, use write_to_spi_sheet() sample_station_info, camera_info, cam_setup_checks, image_data.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write all data to a new SPI submission file — fill_spi_template","text":"","code":"fill_spi_template(   sample_station_info,   camera_info,   camera_setup_checks,   image_data,   file,   template = default_spi_template() )"},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write all data to a new SPI submission file — fill_spi_template","text":"sample_station_info object class sample_station_info camera_info object class camera_info camera_setup_checks object class camera_setup_checks image_data data.frame class image_data, read read_image_data(). file path output file (.xls*) template SPI submission template use. Default included package, accessed system.file(\"GENERIC_wildlife_camera_template_v2021.xlsm\", package = \"bccamtrap\")","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write all data to a new SPI submission file — fill_spi_template","text":"path output file","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template_ff.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data to a new SPI submission file from field form data — fill_spi_template_ff","title":"Write data to a new SPI submission file from field form data — fill_spi_template_ff","text":"write default columns tabs SPI template.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template_ff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data to a new SPI submission file from field form data — fill_spi_template_ff","text":"","code":"fill_spi_template_ff(   sample_station_info,   deployments,   image_data = NULL,   wlrs_project_name = NULL,   file,   template = default_spi_template() )"},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template_ff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data to a new SPI submission file from field form data — fill_spi_template_ff","text":"sample_station_info object class c(\"sample_station_info\", \"field-form\") deployments object class c(\"deployments\", \"field-form\") image_data data.frame class image_data, read read_image_data(). wlrs_project_name name project write, one project sample_station_info /deployments. file path output file (.xls*) template SPI submission template use. Default included package, accessed system.file(\"GENERIC_wildlife_camera_template_v2021.xlsm\", package = \"bccamtrap\")","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template_ff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write data to a new SPI submission file from field form data — fill_spi_template_ff","text":"path output file","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/fill_spi_template_ff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write data to a new SPI submission file from field form data — fill_spi_template_ff","text":"sample_station_info deployments required. want write metadata tabs Sequence Image Data, can leave image_data argument NULL, write file another time write_to_spi_sheet().","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spatial data frame of deployments — make_deployments","title":"Create a spatial data frame of deployments — make_deployments","text":"Merge data \"Sample Station Info\", \"Camera Information\",  \"Camera Setup Checks\" tabs create deployments - time camera deployed running site. \"Invalid\" deployments flagged sampling end date \"Camera Setup Checks\" sampling period 0 days","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spatial data frame of deployments — make_deployments","text":"","code":"make_deployments(path, as_sf = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spatial data frame of deployments — make_deployments","text":"path path RISC workbook as_sf data returned sf object station locations? Default TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_deployments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spatial data frame of deployments — make_deployments","text":"spatial data.frame (sf) deployments","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_sample_sessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify distinct sample sessions from timelapse image data — make_sample_sessions","title":"Identify distinct sample sessions from timelapse image data — make_sample_sessions","text":"deployment label, function: Sets sampling_start first image date Counts photos (total, motion-detection) Determines gaps sampling period due obscured lens Determines total length sample period (number days Time Lapse photos - number days lens obscured)","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_sample_sessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify distinct sample sessions from timelapse image data — make_sample_sessions","text":"","code":"make_sample_sessions(   image_data,   sample_start_date = NULL,   sample_end_date = NULL )"},{"path":"https://bcgov.github.io/bccamtrap/reference/make_sample_sessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify distinct sample sessions from timelapse image data — make_sample_sessions","text":"image_data data.frame class image_data, read read_image_data(). sample_start_date custom start date. Note apply start date deployments/sessions data. sample_end_date custom end date. Note apply start date deployments/sessions data.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/make_sample_sessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify distinct sample sessions from timelapse image data — make_sample_sessions","text":"data.frame class sample_sessions one row (sample session) per deployment","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize stations on an interactive map — map_stations","title":"Visualize stations on an interactive map — map_stations","text":"input data.frame run qa_stations_spatial(), potential spatial outliers visually flagged.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize stations on an interactive map — map_stations","text":"","code":"map_stations(stations)"},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize stations on an interactive map — map_stations","text":"stations sf data.frame read read_sample_station_info()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/map_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize stations on an interactive map — map_stations","text":"mapview object","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge image data with deployment data — merge_deployments_images","title":"Merge image data with deployment data — merge_deployments_images","text":"Attach deployment metadata image data.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge image data with deployment data — merge_deployments_images","text":"","code":"merge_deployments_images(   deployments,   image_data,   drop_unjoined = FALSE,   as_sf = TRUE )"},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge image data with deployment data — merge_deployments_images","text":"deployments deployments data, created make_deployments() image_data data.frame class image_data, read read_image_data(). drop_unjoined unmatched deployment_labels deployments image data, dropped output (equivalent dplyr::inner_join())? Default FALSE. as_sf data returned sf object station locations? Default TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/merge_deployments_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge image data with deployment data — merge_deployments_images","text":"data.frame class image_data, deployment columns attached","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot image timestamps over deployment periods — plot_deployment_detections","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"Plot detections sample deployments check misaligned time stamps","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"","code":"plot_deployment_detections(   deployments,   image_data,   date_breaks = \"1 month\",   interactive = FALSE,   ... )"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"deployments deployments data, created make_deployments() image_data data.frame class image_data, read read_image_data(). date_breaks break dates x axis. See scales::date_breaks(). Default \"1 month\" interactive plot interactive? Default FALSE ... passed ggiraph::girafe() setting options interactive graphs","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployment_detections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot image timestamps over deployment periods — plot_deployment_detections","text":"ggplot2 object interactive = FALSE, ggiraph object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot timelines of image deployments — plot_deployments","title":"Plot timelines of image deployments — plot_deployments","text":"Make plot sampling deployments. plot indicates start end times deployment, station. also shows \"invalid\" sample deployments, example camera moved, stolen, ran batteries etc. indicated light grey line end point.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot timelines of image deployments — plot_deployments","text":"","code":"plot_deployments(   deployments,   date_breaks = \"1 month\",   study_area_name = NULL,   interactive = FALSE,   ... )"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot timelines of image deployments — plot_deployments","text":"deployments deployments data, created make_deployments() date_breaks break dates x axis. See scales::date_breaks(). Default \"1 month\" study_area_name Study area name plot. used already data study_area_name column, otherwise provide . interactive plot interactive? Default FALSE ... passed ggiraph::girafe() setting options interactive graphs","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_deployments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot timelines of image deployments — plot_deployments","text":"ggplot2 object interactive = FALSE, ggiraph object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot daily activity of species detected by motion detection — plot_diel_activity","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"Plot daily activity species detected motion detection","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"","code":"plot_diel_activity(image_data, interactive = FALSE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"image_data data.frame class image_data, read read_image_data(). interactive plot interactive? Default FALSE ... passed ggiraph::girafe() setting options interactive graphs","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_diel_activity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot daily activity of species detected by motion detection — plot_diel_activity","text":"ggplot2 object interactive = FALSE, ggiraph object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot snow depths across deployments — plot_snow","title":"Plot snow depths across deployments — plot_snow","text":"Plot snow depths across deployments","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot snow depths across deployments — plot_snow","text":"","code":"plot_snow(image_data, date_breaks = \"1 month\", interactive = FALSE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot snow depths across deployments — plot_snow","text":"image_data data.frame class image_data, read read_image_data(). date_breaks break dates x axis. See scales::date_breaks(). Default \"1 month\" interactive plot interactive? Default FALSE ... passed ggiraph::girafe() setting options interactive graphs","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/plot_snow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot snow depths across deployments — plot_snow","text":"ggplot2 object interactive = FALSE, ggiraph object TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for mismatched deployment labels in deployment data and image data — qa_deployment_images","title":"Check for mismatched deployment labels in deployment data and image data — qa_deployment_images","text":"function mainly called messaging - alerting deployment labels sample deployment data image data, vice versa.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for mismatched deployment labels in deployment data and image data — qa_deployment_images","text":"","code":"qa_deployment_images(deployments, image_data)"},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for mismatched deployment labels in deployment data and image data — qa_deployment_images","text":"deployments deployments data, created make_deployments() image_data data.frame class image_data, read read_image_data().","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_deployment_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for mismatched deployment labels in deployment data and image data — qa_deployment_images","text":"list two vectors containing mismatched deployment labels","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"Check blanks key fields (study area, station label, deployment date, surveyor, trigger mode, temperature, episode) Species detected count data Count data species Sum subcount fields equals Total Count Multiple entries Episode number (indicating possible double entry) Ensure dates timelapse images continuous order. Ensure daily timelapse photos expected time Snow data blanks unless lens obscured TRUE Look snow depth outliers (e.g., 10, 10, 110, 10, 15, 20)","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"","code":"qa_image_data(   image_data,   exclude_human_use = TRUE,   check_snow = TRUE,   tl_time = \"12:00:00\" )"},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"image_data data.frame class image_data, read read_image_data(). exclude_human_use images human_use_type indicates motion detection event humans excluded count/species checks? Default TRUE. check_snow show QA performed snow measurements? Default TRUE tl_time time day timelapse images set . Default \"12:00:00\"","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_image_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a series of QA checks on the Timelapse Image data — qa_image_data","text":"input data frame additional QA_* columns appended, subset rows QA issue flagged.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Check spatial attributes of Sample Station information — qa_stations_spatial","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"checks inconsistent placement stations flag potentially incorrect location information","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"","code":"qa_stations_spatial(stations, quant_thresh = 0.9, dist_thresh = NULL)"},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"stations sf data.frame read read_sample_station_info() quant_thresh quantile distance station stations (compared average distance stations) flagged outlier. Default 0.85. dist_thresh distance (m) distance station stations flagged outlier. default quantile used, can overriden setting numeric value metres.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/qa_stations_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check spatial attributes of Sample Station information — qa_stations_spatial","text":"input data.frame, new logical column spatial_outlier appended.","code":""},{"path":[]},{"path":"https://bcgov.github.io/bccamtrap/reference/rai_by_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate RAI over a window of time, optionally rolling — rai_by_time","title":"Calculate RAI over a window of time, optionally rolling — rai_by_time","text":"function takes data frame image data calculates snow, temperature, effort, count, RAI metrics aggregated specified time window. can optionally calculated using moving window (\"rolling\") calculation.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/rai_by_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate RAI over a window of time, optionally rolling — rai_by_time","text":"","code":"rai_by_time(   image_data,   by = c(\"date\", \"week\", \"month\", \"year\"),   roll = FALSE,   k = 7,   by_species = TRUE,   species = NULL,   by_deployment = FALSE,   deployment_label = NULL,   sample_start_date = NULL,   sample_end_date = NULL,   snow_agg = \"max\" )"},{"path":"https://bcgov.github.io/bccamtrap/reference/rai_by_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate RAI over a window of time, optionally rolling — rai_by_time","text":"image_data data.frame class image_data, read read_image_data(). time aggregate : One \"date\" (default), \"week\", \"month\", \"year\". roll use rolling window? Default FALSE k size rolling window. Default 7. by_species RAI calculated species (TRUE, default), one RAI species (FALSE) species Optionally, species character vector. Default NULL calculate RAI species detected. by_deployment calculated deployment. Default FALSE deployment_label Optionally, one deployment labels select. Default NULL use deployments. sample_start_date custom start date. Note apply start date deployments/sessions data. sample_end_date custom end date. Note apply start date deployments/sessions data. snow_agg by_deployment = FALSE, aggregate snow measurements across sites. Takes name aggregation function (e.g., \"mean\"). Default \"max\"","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/rai_by_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate RAI over a window of time, optionally rolling — rai_by_time","text":"data.frame calculated metrics","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the ","title":"Read the ","text":"read camera setup information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the ","text":"","code":"read_cam_setup_checks(path, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the ","text":"path path RISC workbook ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_cam_setup_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the ","text":"data.frame camera setup information","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the ","title":"Read the ","text":"read camera information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the ","text":"","code":"read_camera_info(path, as_sf = TRUE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the ","text":"path path RISC workbook as_sf data returned sf object station locations? Default TRUE ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_camera_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the ","text":"data.frame station information, sf object specified.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_deployments_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read csv output from deployments field form — read_deployments_csv","title":"Read csv output from deployments field form — read_deployments_csv","text":"Read csv output deployments field form","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_deployments_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read csv output from deployments field form — read_deployments_csv","text":"","code":"read_deployments_csv(path, wlrs_project_name = NULL, as_sf = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_deployments_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read csv output from deployments field form — read_deployments_csv","text":"path path csv file exported field form wlrs_project_name want subset particular project projects, supply WLRS Project Names(s) character vector. NULL (default), reads rows csv. as_sf data returned sf object station locations? Default TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_deployments_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read csv output from deployments field form — read_deployments_csv","text":"data.frame (sf object as_sf = TRUE) containing deployments csv contents","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read image data from a collection of csvs from TimeLapse — read_image_data","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"addition reading data, function copies snow depth data timelapse photo day motion photos day, facilitate analysis.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"","code":"read_image_data(path, pattern, recursive = FALSE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"path path directory image files, single .csv file, character vector .csv files. pattern optional regular expression. file names match regular expression read. Default FALSE. recursive files found within subfolders path also read? ... arguments passed readr::read_csv()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_image_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read image data from a collection of csvs from TimeLapse — read_image_data","text":"data.frame Timelapse image data files found path","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"read project information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"","code":"read_project_info(path, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"path path RISC workbook ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_project_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read project-level data from the RISC worksheet 'Project Information' tab — read_project_info","text":"data.frame project-level information","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read csv output from sample station field form — read_sample_station_csv","title":"Read csv output from sample station field form — read_sample_station_csv","text":"Read csv output sample station field form","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read csv output from sample station field form — read_sample_station_csv","text":"","code":"read_sample_station_csv(path, wlrs_project_name = NULL, as_sf = TRUE)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read csv output from sample station field form — read_sample_station_csv","text":"path path csv file exported field form wlrs_project_name want subset particular project projects, supply WLRS Project Names(s) character vector. NULL (default), reads rows csv. as_sf data returned sf object station locations? Default TRUE","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read csv output from sample station field form — read_sample_station_csv","text":"data.frame (sf object as_sf = TRUE) containing sample station csv contents","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the ","title":"Read the ","text":"read sample station information RISC worksheet following 'v20230518' template","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the ","text":"","code":"read_sample_station_info(path, as_sf = TRUE, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the ","text":"path path RISC workbook as_sf data returned sf object station locations? Default TRUE ... arguments passed readxl::read_excel()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/read_sample_station_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the ","text":"data.frame station information, sf object specified.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/sample_rai.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Relative Activity Index (RAI) — sample_rai","title":"Calculate Relative Activity Index (RAI) — sample_rai","text":"Calculate RAI sample sessions species. Optionally set start date end date, deployment label(s), species. can choose calculate RAI species deployment label, whole.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/sample_rai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Relative Activity Index (RAI) — sample_rai","text":"","code":"sample_rai(   image_data,   deployment_label = NULL,   species = NULL,   by_deployment = TRUE,   by_species = TRUE,   sample_start_date = NULL,   sample_end_date = NULL )"},{"path":"https://bcgov.github.io/bccamtrap/reference/sample_rai.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Relative Activity Index (RAI) — sample_rai","text":"image_data data.frame class image_data, read read_image_data(). deployment_label Optionally, one deployment labels select. Default NULL use deployments. species Optionally, species character vector. Default NULL calculate RAI species detected. by_deployment RAI calculated deployment label (TRUE, default), one RAI deployment labels (FALSE) by_species RAI calculated species (TRUE, default), one RAI species (FALSE) sample_start_date custom start date. Note apply start date deployments/sessions data. sample_end_date custom end date. Note apply start date deployments/sessions data.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/sample_rai.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Relative Activity Index (RAI) — sample_rai","text":"data.frame RAI, deployment label species (by_species = TRUE)","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Sample Station Info or Camera Info to a spatial sf boject #' — to_sf","title":"Convert Sample Station Info or Camera Info to a spatial sf boject #' — to_sf","text":"Convert Sample Station Info Camera Info spatial sf boject #'","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Sample Station Info or Camera Info to a spatial sf boject #' — to_sf","text":"","code":"to_sf(x, ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Sample Station Info or Camera Info to a spatial sf boject #' — to_sf","text":"x Object class sample_station_info camera_info ... arguments passed sf::st_as_sf()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Sample Station Info or Camera Info to a spatial sf boject #' — to_sf","text":"input sf object","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Write image data to a csv file — write_image_data","title":"Write image data to a csv file — write_image_data","text":"thin wrapper around readr::write_csv(). can use function directly control","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write image data to a csv file — write_image_data","text":"","code":"write_image_data(image_data, file, na = \"\", ...)"},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write image data to a csv file — write_image_data","text":"image_data data.frame class image_data, read read_image_data(). file path output csv file na missing values written. Default empty (\"\") ... parameters passed readr::write_csv()","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write image data to a csv file — write_image_data","text":"input image_data, invisibly","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_image_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write image data to a csv file — write_image_data","text":"","code":"if (FALSE) { write_image_data(image_data, \"my_spi_submission.xlsx\") write_image_data(image_data, \"my_spi_submission.xlsx\", Surveyor = surveyor,    `Survey Observation Photos` = file) }"},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a single data frame to SPI submission template — write_to_spi_sheet","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"want write existing file, specify file name file template parameters.","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"","code":"write_to_spi_sheet(x, file, ..., template = default_spi_template())"},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"x object class sample_station_info, camera_info, cam_setup_checks, image_data file path output file (.xls*) ... extra columns x write . Must paired column names form `Destination Column` = data_column. left-hand side syntactically valid name can provided -, spaces must wrapped backticks quotes. See examples. template SPI submission template use. Default included package, accessed system.file(\"GENERIC_wildlife_camera_template_v2021.xlsm\", package = \"bccamtrap\")","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"input x, invisibly","code":""},{"path":"https://bcgov.github.io/bccamtrap/reference/write_to_spi_sheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a single data frame to SPI submission template — write_to_spi_sheet","text":"","code":"if (FALSE) { write_to_spi_sheet(camera_setup_checks_data, \"my_spi_submission.xlsx\") write_to_spi_sheet(image_data, \"my_spi_submission.xlsx\", Surveyor = surveyor,    `Survey Observation Photos` = file) }"}]
